---
- name: Enable RPM Fusion repositories
  dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: yes
  become: true
  loop:
    - "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-33.noarch.rpm"
    - "https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-33.noarch.rpm"
    
- name: dnf upgrade
  dnf:
    name: "*"
    state: latest
  become: true

- name: Install user packages with dnf
  dnf:
    name:
      - bpytop
      - curl
      - ffmpeg
      - firefox
      - flatpak
      - git
      - gzip
      - less
      - libvirt
      - ripgrep
      - ristretto
      - ruby
      - speedtest-cli
      - tree
      - unzip
      - vagrant
      - vim
      - wget
      - whois
      - xdg-user-dirs
      - zsh
    state: latest
  become: true

- name: Add flathub repo
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user

- name: Install flatpak programs
  community.general.flatpak:
    name:  "{{ item }}"
    method: user
  loop:
    - 'com.spotify.Client'
    - 'org.telegram.desktop'

- name: Remove KDE bloat
  dnf:
    name:
      - kontact
      - kmail
      - korganizer
      - kfind
      - kruler
      - kaddressbook
      - konqueror
      - kget
      - gwenview
      - kgpg
      - kmag
      - kwallet
      - kde-partitionmanager
    state: absent
  become: true

- name: dnf autoremove
  dnf:
    autoremove: yes
  become: true

- name: Ensure wheel group
  group:
    name: wheel
    state: present
  become: true

- name: get current login name
  shell: whoami
  register: host_username

- name: Change user login shell to zsh and ensure wheel group
  user:
    name: "{{ host_username.stdout }}"
    shell: /bin/zsh
    groups: wheel
    append: yes
    create_home: yes
  become: true

- name: Ensure home directory has correct permissions
  file: path='/home/{{ host_username.stdout }}/' state=directory mode='0700' owner='{{ host_username.stdout }}' group='{{ host_username.stdout }}'
  become: true

- name: Remove default home directories
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /home/{{ host_username.stdout }}/Desktop
    - /home/{{ host_username.stdout }}/Downloads
    - /home/{{ host_username.stdout }}/Templates
    - /home/{{ host_username.stdout }}/Public
    - /home/{{ host_username.stdout }}/Documents
    - /home/{{ host_username.stdout }}/Music
    - /home/{{ host_username.stdout }}/Pictures
    - /home/{{ host_username.stdout }}/Videos

- name: Create custom home directories
  file:
    path:  "{{item }}"
    state: directory
    owner: "{{ host_username.stdout }}"
    mode: '0755'
  loop:
    - /home/{{ host_username.stdout }}/bin
    - /home/{{ host_username.stdout }}/etc
    - /home/{{ host_username.stdout }}/dl
    - /home/{{ host_username.stdout }}/tmp
    - /home/{{ host_username.stdout }}/prg
    - /home/{{ host_username.stdout }}/img
    - /home/{{ host_username.stdout }}/etc/desktop
    - /home/{{ host_username.stdout }}/etc/template
    - /home/{{ host_username.stdout }}/etc/public
    - /home/{{ host_username.stdout }}/etc/documents
    - /home/{{ host_username.stdout }}/etc/music
    - /home/{{ host_username.stdout }}/etc/videos
    - /home/{{ host_username.stdout }}/.config
    
- name: Look for default xdg-user-dirs config file
  stat:
    path: /home/{{ host_username.stdout }}/.config/user-dirs.dirs
  register: userdirs_result
   
- name: Backup default xdg-user-dirs config file
  command: mv user-dirs.dirs user-dirs.dirs.old
  when: userdirs_result.stat.exists

- name: Create personal xdg-user-dirs conf file
  file:
    path: /home/{{ host_username.stdout }}/.config/user-dirs.dirs
    state: touch
    mode: '600'

- name: Input custom xdg-user-dirs confgurations
  blockinfile:
    path: /home/{{ host_username.stdout }}/.config/user-dirs.dirs
    block: |
      XDG_DOWNLOAD_DIR="$HOME/dl"
      XDG_PICTURES_DIR="$HOME/img"
      XDG_DESKTOP_DIR="$HOME/etc/desktop"
      XDG_TEMPLATES_DIR="$HOME/etc/template"
      XDG_PUBLICSHARE_DIR="$HOME/etc/public"
      XDG_DOCUMENTS_DIR="$HOME/etc/docs"
      XDG_MUSIC_DIR="$HOME/etc/music"
      XDG_VIDEOS_DIR="$HOME/etc/vid"
  
- name: Look for oh-my-zsh
  stat:
    path: /home/{{ host_username.stdout }}/.oh-my-zsh
  register: ohmyzsh_result

- name: Install oh-my-zsh 
  shell:
    cmd: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when: not ohmyzsh_result.stat.exists
  
- name: Add custom shell aliases
  blockinfile:
    path: /home/{{ host_username.stdout }}/.zshrc
    block: |
      alias clc=clear
      alias password="head /dev/urandom | tr -dc A-Za-z0-9 | head -c 18 ; echo ''"
      alias weather="curl wttr.in/Tampere\?2qn"

- name: Ensure nopasswd for wheel
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  become: true
